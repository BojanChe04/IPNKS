<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Overflow Animation</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
    <style>
        body {
            overflow: hidden;
        }
    </style>
</head>
<body>
<button onclick="moveLeft()"><</button>
<button onclick="moveRight()">></button>

<script>
    let data = '[{"background-color":"red", "width":"100px", "height":"100px"}, ' +
        '{"background-color":"green", "width":"50px", "height":"100px"}, ' +
        '{"background-color":"blue", "width":"100px", "height":"50px"}]';
    data = JSON.parse(data);

    let index = 0;
    let isAnimating = false;


    let newDiv = document.createElement('div');
    newDiv.style.position = 'absolute';
    newDiv.style.top = '500px'
    changeDiv(data[0]);
    document.body.appendChild(newDiv);

    function changeDiv(dataElem) {
        newDiv.style.backgroundColor = dataElem['background-color'];
        newDiv.style.width = dataElem['width'];
        newDiv.style.height = dataElem['height'];
    }

    function moveLeft() {
        if (isAnimating) return;

        isAnimating = true;

        anime({
            targets: newDiv,
            translateX: '-1600px',
            duration: 1000,
            easing: 'easeInOutQuad',
            complete: () => {
                index++;
                if (index >= data.length) index = 0;
                changeDiv(data[index]);

                newDiv.style.transform = 'translateY(-50%) translateX(1600px)';
                anime({
                    targets: newDiv,
                    translateX: '0px',
                    duration: 1000,
                    easing: 'easeInOutQuad',
                    complete: () => {
                        isAnimating = false;
                    }
                });
            }
        });
    }

    function moveRight() {
        if (isAnimating) return;

        isAnimating = true;

        anime({
            targets: newDiv,
            translateX: '1600px',
            duration: 1000,
            easing: 'easeInOutQuad',
            complete: () => {
                index--;
                if (index < 0) index = data.length - 1;
                changeDiv(data[index]);
                newDiv.style.transform = 'translateY(-50%) translateX(-1600px)';
                anime({
                    targets: newDiv,
                    translateX: '0px',
                    duration: 1000,
                    easing: 'easeInOutQuad',
                    complete: () => {
                        isAnimating = false;
                    }
                });
            }
        });
    }
</script>
</body>
</html>


//////////////////////////////bez anime///////////////////////////


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
</head>
<style>
    body{
        overflow: hidden;
    }
</style>
<body>
<button onclick="func_levo()"><</button>
<button onclick="func_desno()">></button>
<script>
    let podatoci = []
    let index = 0
    let url = "https://webhook.site/5430dedd-5534-4f75-b921-e0fca8924cd8"
    fetch(url)
    .then(response => response.json())
    .then (function (data){
        podatoci = data
        console.log(data)
        changeDiv(data[0])
    })
    let newDiv = document.createElement('div')
    document.body.appendChild(newDiv)
    function changeDiv(el){

        newDiv.style.position = 'absolute'
        newDiv.style.width = el.width
        newDiv.style.height = el.height
        newDiv.style.top = "50px"
        newDiv.style.backgroundColor = el['background-color']


    }
    function func_levo(){
        index++
        if(index>=podatoci.length){
            index = 0
        }
        let leftPos = 1550
        newDiv.style.left = leftPos + "px"
        changeDiv(podatoci[index])
        function move(){
            leftPos-=10
            newDiv.style.left = leftPos + "px"
            if(leftPos<=0){
                newDiv.style.left = 0 + "px"

            }
            else{
                setTimeout(move,20)
            }
        }
        move();

    }
    function func_desno(){
        index++
        if(index>=podatoci.length){
            index = 0
        }
        let leftPos = 0
        newDiv.style.left = leftPos + "px"
        function move(){
            leftPos+=10
            newDiv.style.left = leftPos + "px"
            if(leftPos>=1550){
                newDiv.style.left = 0 + "px"
                changeDiv(podatoci[index])
            }
            else{
                setTimeout(move,20)
            }
        }
        move();
    }
</script>
</body>
</html>

